// NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.
// Based on "crates/re_types/definitions/rerun/archetypes/text_entry.fbs"

#pragma once

#include "../components/body.hpp"
#include "../components/level.hpp"
#include "../data_cell.hpp"

#include <arrow/type_fwd.h>
#include <cstdint>
#include <optional>
#include <utility>
#include <vector>

namespace rerun {
    namespace archetypes {
        /// A 3D transform.
        struct TextEntry {
            std::vector<rerun::components::Body> bodies;

            std::optional<std::vector<rerun::components::Level>> levels;

          public:
            TextEntry() = default;

            TextEntry(std::vector<rerun::components::Body> _bodies) : bodies(std::move(_bodies)) {}

            TextEntry(rerun::components::Body _bodies) : bodies(1, std::move(_bodies)) {}

            TextEntry& with_levels(std::vector<rerun::components::Level> _levels) {
                levels = std::move(_levels);
                return *this;
            }

            TextEntry& with_levels(rerun::components::Level _levels) {
                levels = std::move(std::vector(1, std::move(_levels)));
                return *this;
            }

            /// Returns the number of primary instances of this archetype.
            size_t num_instances() const {
                return bodies.size();
            }

            /// Creates a list of Rerun DataCell from this archetype.
            arrow::Result<std::vector<rerun::DataCell>> to_data_cells() const;
        };
    } // namespace archetypes
} // namespace rerun
